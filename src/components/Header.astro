---
import HeaderLink from "./HeaderLink.astro";
import { SITE_TITLE } from "../consts";
import { ThemeSwitch } from "astro-color-scheme";
import {
  Astronav,
  MenuItems,
  MenuIcon,
  Dropdown,
  DropdownItems,
} from "astro-navbar";
import { Icon } from "astro-icon/components";
---

<header>
  <nav>
    <Astronav>
      <h2 class="icon"><a href="/">{SITE_TITLE}</a></h2>
      <div class="menubuttons">
        <ThemeSwitch strategy="button">
          <button id="themeToggle" style="font-size: 1.25em; background-color: transparent; border: none; border-radius: 0.25em;"> ‚òÄÔ∏è </button>
        </ThemeSwitch>
        <a href="/linktree" id="menuIcon">
          <MenuIcon class="w-4 h-4 text-gray-800 ham" />
        </a>
      </div>
    </Astronav>
  </nav>
</header>

<style>
  @font-face {
    font-family: "Baskerville";
    src: url("/fonts/LibreBaskerville-Regular.ttf") format("truetype");
    font-weight: 100;
    font-style: normal;
    font-display: swap;
  }

 
  .icon {
    font-family: "Baskerville", sans-serif;
    color: #0156cf;
  }

  .menubuttons {
    display: flex;
    align-items: center;

  }
  header {
    margin: 0;
    padding: 0 1em;
    background: #0156cf;
    box-shadow: 0 2px 8px rgba(var(--black), 5%);
    background-color: transparent;
  }

  h2 {
    margin: 0;
    font-size: 1em;
  }

  h2 a,
  h2 a.active {
    text-decoration: none;
  }

  nav {
    display: flex;
    align-items: center;
    justify-content: space-between;
    color: #0156cf;
  }

  nav a {
    padding: 1em 0.5em;

    color: var(--black);
    border-bottom: 4px solid transparent;
    text-decoration: none;
  }

  nav a.active {
    text-decoration: none;
    border-bottom-color: #f8e600;
  }

  .social-links,
  .social-links a {
    display: flex;
  }

  .large-hide {
    display: none;
  }

  @media (max-width: 1024px) {
    .social-links {
      display: none;
    }

    .hidden-on-small {
      display: none;
    }

    .social-links-mobile {
      display: flex;
    }
  }
</style>
<script>
  document.addEventListener("DOMContentLoaded", () => {
    const themeToggle = document.getElementById("themeToggle") as HTMLElement | null;
    let themePreference: string  = localStorage.getItem("theme") || "";

    // Set initial icon based on theme preference
    if (themeToggle && themePreference) {
      themeToggle.textContent = themePreference === "dark" ? "üåô" : "‚òÄÔ∏è";
    }

    if (themeToggle) {
      themeToggle.addEventListener("click", () => {
        if (themeToggle.textContent && themeToggle.textContent.trim() === "‚òÄÔ∏è") {
          themeToggle.textContent = "üåô";
          themePreference = "dark";
        } else if (themeToggle.textContent && themeToggle.textContent.trim() === "üåô") {
          themeToggle.textContent = "‚òÄÔ∏è";
          themePreference = "light";
        }

        // Store updated theme preference to local storage
        localStorage.setItem("themePreference", themePreference);

        // Add logic to change theme here (toggle classes, etc.)
        // For example, you can toggle a 'dark-theme' class on the body element
        // document.body.classList.toggle("dark-theme");
      });
    }

    const menuIcon = document.getElementById("menuIcon") as HTMLAnchorElement | null;
    if (menuIcon) {
      menuIcon.addEventListener("click", function () {
        if (window.location.pathname === "/linktree") {
          menuIcon.href = document.referrer;
        }
      });
    }
  });
</script>

